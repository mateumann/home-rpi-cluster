---
# -- Global parameters group
# -- @default -- object
global:
  # -- Parameter group for the container images
  # @default -- object
  image:
    # -- Container images registry
    registry: "docker.io"
    # -- Specify a imagePullPolicy (can be overridden for each microservice), defaults to 'Always'
    # -- if image tag is 'latest', else set to 'IfNotPresent'.
    # -- ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: &pullPolicy "IfNotPresent"
    # -- Specify secrets used for pulling container images
    pullSecrets: []
  # -- Parameter group for the persistence
  # @default -- object
  persistence:
    nfsHddStorageClassName: forlond-1-nfs-client

  # -- Parameter group for the metrics
  # @default -- object
  metrics:
    # -- Specify if metrics should be enabled by default
    enabled: &metrics false

# -- Parameters group for service account.
# @default -- object
serviceAccount:
  create: false
  name: "nextcloud"
  annotations: {}

# -- Parameters group for nextcloud installation.
# @default -- object
nextcloud:
  replicaCount: 1
  image:
    name: "nextcloud"
    tag: 27.0.2-fpm-alpine
    pullPolicy: *pullPolicy
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 80
  service:
    type: "LoadBalancer"
    http:
      enabled: true
      port: 80
    fpm:
      enabled: true
      port: 9000
  resources:
    limits:
      cpu: 2000m
      memory: 1536Mi
    requests:
      cpu: 200m
      memory: 256Mi
  securityContext: {}
  nodeSelector: {}
  affinity:
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: "storage.pictaviensis.regnum/ssd-speed"
                  operator: In
                  values:
                    - "fast"
            topologyKey: kubernetes.io/hostname
          weight: 60
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                    - "nextcloud"
            topologyKey: kubernetes.io/hostname
          weight: 20
  tolerations: {}
  podAnnotations: {}
  podSecurityContext: {}

# -- Parameters group for nginx sidecar installation.
# @default -- object
nginx:
  image:
    name: "nginx"
    tag: 1.25.1-alpine
    pullPolicy: *pullPolicy
  securityContext: {}


# -- Parameters group for bitnami/postgresql helm chart.
# ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/README.md
# @default -- object
postgresql:
  enabled: true
  # fullnameOverride: postgresql
  auth:
    existingSecret: "postgresql"  # pragma: allowlist secret
    #username: "nextcloud"
    database: "nextcloud"
  image:
    tag: "15.4.0"
    pullPolicy: *pullPolicy
  containerPorts:
    postgresql: 5432
  primary:
    nodeSelector:
      machine.pictaviensis.regnum/type: "raspberry-pi-4b-large"
      storage.pictaviensis.regnum/ssd-speed: "fast"
    persistence:
      existingClaim: "postgresql"
    resources:
      limits:
        memory: "1Gi"
        cpu: 2
      requests:
        memory: "256Mi"
        cpu: 0.5
    initContainers:
      - name: volume-data-perms
        image: busybox
        imagePullPolicy: *pullPolicy
        volumeMounts:
          - name: data
            mountPath: "/bitnami/postgresql"
        command:
          - "sh"
          - "-c"
          - "chown 1001 /bitnami/postgresql"
  metrics:
    enabled: *metrics


# -- Parameters group for bitnami/redis helm chart.
# ref: https://github.com/bitnami/charts/blob/main/bitnami/redis/README.md
# @default -- object
redis:
  enabled: true
  # fullnameOverride: postgresql
  image:
    tag: "7.2.0"
    pullPolicy: *pullPolicy
  containerPorts:
    postgresql: 6379
  master:
    nodeSelector:
      storage.pictaviensis.regnum/ssd-speed: "fast"
    persistence:
      existingClaim: "redis"
    resources:
      limits:
        memory: "256Mi"
        cpu: "200m"
      requests:
        memory: "64Mi"
        cpu: "100m"
    initContainers:
      - name: volume-data-perms
        image: busybox
        imagePullPolicy: *pullPolicy
        volumeMounts:
          - name: redis-data
            mountPath: "/data"
        command:
          - "sh"
          - "-c"
          - "chown 1001 /data"
  replica:
    replicaCount: 0
  metrics:
    enabled: *metrics

